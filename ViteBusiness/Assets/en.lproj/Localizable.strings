/* 
  Localizable.strings
  Pods

  Created by Stone on 2018/12/5.
  
*/

/* ViteCommunity */

"confirm.button.title" = "Confirm";
"cancel.button.title" = "Cancel";
"alter.title" = "NOTICE";

"discover.page.title"="Discovery";
"discover.page.game.cell.palyNum"="%@ players are playing";
"discover.page.activity.page.title1"="Latest Events";
"discover.page.activity.page.title2"="History";
"discover.page.news.cell.official"="Vite";
"discover.page.news.cell.time.minute"="Now";
"discover.page.news.cell.time.hour"="%@h ago";
"discover.page.news.cell.time.day"="%@d ago";
"discover.page.headerTitle.activity"="Campaign Center";
"discover.page.headerTitle.game"="Vite Games";
"discover.page.headerTitle.news"="Vite News";
"discover.page.VCWebTitle.activity"="Vite Events";
"discover.page.VCWebTitle.game"="Vite Games";
"discover.page.VCWebTitle.news"="Vite News";
"discover.page.game.alter.title"="You have visited a page which leaves Vite App, and you will be redirected to a third party dApp. Your use on this dApp will abide by the dApp's Term of User Agreement and Privacy Policy. Vite Labs has no supervision or control over the quality, content, reliability or security of the third party dApp, nor shall Vite Labs be liable for its use.";

//AirDrop
"airdrop.help" = "Help";
"airdrop.vpower" = "Winners";
"airdrop.profit" = "Benefits";
"airdrop.validationFailed" = "Verification Failed";
"airdrop.enabled" = "Pick up 10~1000";
"airdrop.leftTime" = "Countdown";

"airdrop.error.tip.need.update" = "Airdrop is only supported on iOS 11 and above.";
"airdrop.error.tip.not.support" = "Your device not support airdrop.";
"airdrop.error.tip.unknown.error" = "Unknown Error.";


/* App */
"Cancel" = "Cancel";
"Finish" = "Done";
"Delete" = "Delete";
"Hint" = "Prompt";
"Yes" = "Yes";
"No" = "No";
"Loading" = "Loading";
"Retry" = "Retry";
"Confirm" = "Confirm";
"Submit" = "Submit";
"Close" = "I understand";
"Update.app" = "Update App";
"Submit.cancel" = "Cancel";
"Close" = "Close";
"Quit" = "Quit";
"web.page.host.tip"="This page is provided by %@";

/* Login */
"create.account" = "Create Account";
"import.account" = "Import Account";
"select.wallet.account" = "Select your account";

/* Lock */
"lock.page.pwd.btn.title" = "Login via password";
"lock.page.fingerprint.btn.title" = "Biometric Verification";
"lock.page.fingerprint.alter.title" = "Verify fingerprint to activate Touch ID";
"lock.page.changeUser.btn.title" = "Switch Account";

/* create */
"create.page.title" = "Create Account";
"create.page.tf.title" = "Account Name";
"create.page.pw.title" = "Please input password";
"create.page.pw.repeate.title" = "Please input your password again";
"create.page.invite.code.title" = "Enter invitation code or scan invitation QR code to enjoy 10% off trading fees and premiere mining";
"create.page.invite.code.placeholder" = "Invitation Code(Optional)";
"create.page.submit.btn.title" = "Create";
"create.page.toast.error.invite.code" = "Wrong Invitation Code";

"create.page.tip.title" = "Backup Instructions";
"create.page.tip.content1" = "Caution! Loss of mnemonic words will result in loss of all digital assets in the wallet.";
"create.page.tip.content2" = "Importing mnemonic words is the only way to retrieve an account after deleting or reinstalling the App.";
"create.page.tip.content3" = "Please store your mnemonic words in a safe place.";
"create.page.tip.button.skip.title" = "Back Up Later";
"create.page.tip.button.next.title" = "Backed Up";

/* mnemonic */
"mnemonic.backup.page.title" = "Mnemonic Words Backup";
"mnemonic.backup.page.tip1" = "We recommend the two following backup methods:";
"mnemonic.backup.page.tip2" = "Write down mnemonic words on a piece of paper, then keep it in a safe place.";
"mnemonic.backup.page.tip3" = "Scan the QR code below using the Vite wallet installed on another device.";
"mnemonic.backup.language.zh" = "ä¸­";
"mnemonic.backup.language.en" = "EN";

"mnemonic.backup.scan.alert.title" = "Notice";
"mnemonic.backup.scan.alert.message" = "Confirm account creation with the following mnemonic words?";
"mnemonic.backup.scan.alert.ok.title" = "Confirm";
"mnemonic.backup.scan.alert.cancel.title" = "Cancel";

"mnemonic.backup.page.check.button1.title" = "I understand if I lose the mnemonic words, I would never find back my assets";
"mnemonic.backup.page.check.button2.title" = "I understand if I forget or lose the mnemonic words, nobody can help to recover";
"mnemonic.backup.page.check.button3.title" = "I have already read, understood and I agree to our ";
"mnemonic.backup.page.clause.button.title" = "Terms and Conditions";
"mnemonic.backup.page.tip.lab.title" = "Seed Phrase";
"mnemonic.backup.page.tip.anewBtn.title" = "Regenerate";
"mnemonic.backup.page.tip.nextBtn.title" = "Backed Up";
"mnemonic.backup.page.tip.skip.title" = "Back Up Later";
"mnemonic.backup.page.alter.title" = "We strongly advise against taking a screenshot of the seed phrase.  We suggest that you write down the seed phrase on a piece of paper and keep it in a safe place.";
"mnemonic.backup.page.alter.message" = "Would you like to create a new seed phrase?";
"mnemonic.backup.page.alter.cancel" = "No";
"mnemonic.backup.page.alter.confirm" = "Yes";
"mnemonic.backup.page.error.type.name" = "Please input account name or password";
"mnemonic.backup.page.error.type.nameValid" = "Account name only supports Chinese and English characters as well as underscores.";
"mnemonic.backup.page.error.type.validWalletNameCount" = "Username only supports less than 32 characters";
"mnemonic.backup.page.error.type.difference" = "Please enter the same password!";
"mnemonic.backup.page.error.type.pwd.illegal" = "Your password should contain at lease 8 characters";
"mnemonic.backup.page.switch.mode.title" = "Switch to %@ mnemonic words";

"mnemonic.backup.tip.alert.title" = "Mnemonic Words Unbacked Up";
"mnemonic.backup.tip.alert.message" = "Please enter password to back up the Mnemonic Words.";
"mnemonic.backup.tip.alert.ok.title" = "Back Up Now";
"mnemonic.backup.tip.alert.cancel.title" = "Back Up Later";

"mnemonic.affirm.page.title" = "Confirm";
"mnemonic.affirm.page.tip.title" = "Orderly select seed phrase";
"mnemonic.affirm.alter.title" = "This action will regenerate seed phrase, ready to go back?";
"mnemonic.affirm.alter.check.title" = "Incorrect seed phrase!";
"mnemonic.affirm.page.add.loading" = "Adding...";

/* import mnemonic*/
"import.page.title" = "Please input your seed phrase";
"import.page.submit.btn" = "Restore Account";
"import.page.submit.invalid.mnemonic" = "Something wrong with your seed phrase, please try again!";
"import.page.submit.loading" = "Import...";
"import.page.submit.success" = "Import success";
"import.page.alert.exist.title" = "The seed phrase you input has already had an account name '%@' on current device, are you sure you would like to overwrite existed account";
"import.page.alert.exist.ok" = "Confirm";
"import.page.alert.exist.cancel" = "Cancel";


/* export mnemonic */
"export.page.title" = "Export Seed Phrase";
"export.page.alter.title" = "Please Input Password";
"export.page.alter.tf.placeholder" = "Please input password";
"export.page.alter.password.error" = "Wrong Password!";

/* login */
"login.page.btn.chooseName" = "Select Accounts";
"login.page.btn.login" = "Login";
"login.page.loading.title" = "Processing";
"login.page.error.toast.title" = "Wrong password! Please try to import seed phrase instead";

/* Home */
"tabbar.item.title.wallet" = "Wallet";
"tabbar.item.title.my" = "Me";

/* Wallet Home */
"wallet.home.balance.title" = "Balance";
"wallet.home.unconfirmed.title" = "Unreceived %@";
"wallet.home.toast.copy.address" = "Successfully copied!";
"wallet.home.scan.url.alert.title" = "NOTICE";
"wallet.home.scan.url.alert.message" = "You are going to visit a third party page which leaves Vite App. Your use on this page will abide by third party Term of User Agreement and Privacy Policy, Vite Labs has any supervision or control over the quality, content, reliability or security of the third party dApp, nor shall Vite Labs be liable for its use.";
"wallet.home.header.title" = "Assets";

/* Manage Wallet */
"manage.wallet.page.title" = "Wallet Management";
"manage.wallet.page.name.cell.title" = "Account Name";
"manage.wallet.page.addressManage.cell.title" = "Address Management";
"manage.wallet.page.importMnemonic.cell.title" = "Export Seed Phrase";
"manage.wallet.page.alter.changeName" = "Edit Wallet Name";
"manage.wallet.page.changeName.loading" = "Editing";
"manage.wallet.page.error.type.name" = "Wallet name can not be empty";

"my.page.contacts.cell.title" = "Contact Address";
"my.page.mnemonic.cell.title" = "Mnemonic Words";
"my.page.system.cell.title" = "Settings";
"my.page.invite.cell.title" = "Refer for mining";
"my.page.reward.cell.title" = "Rewards Enquiry";
"my.page.forum.cell.title" = "Official Forum";
"my.page.aboutUs.cell.title" = "About Us";
"my.page.change.wallet.name.alter.title" = "Edit Account Name";
"my.page.aboutUs.wechat.alert.title" = "Scan QR code to follow Vite WeChat Official Account";

/* Transaction List */
"transaction.list.page.title" = "Transaction History";
"transaction.list.page.empty" = "Empty";
"transaction.list.page.network.error" = "Refresh";
"transaction.list.page.genesis.cell.name" = "Check Genesis Block Records";
"transaction.list.page.header.refresh.idle" = "Pull down to refresh";
"transaction.list.page.header.refresh.pulling" = "Release to refresh";
"transaction.list.page.header.refresh.refreshing" = "Loading...";
"transaction.list.transaction.type.name.register" = "Registration";
"transaction.list.transaction.type.name.registerUpdate" = "Update Registration";
"transaction.list.transaction.type.name.cancelRegister" = "Revoke Registration";
"transaction.list.transaction.type.name.extractReward" = "Retrieve Rewards";
"transaction.list.transaction.type.name.vote" = "Voting";
"transaction.list.transaction.type.name.cancelVote" = "Revoke Voting";
"transaction.list.transaction.type.name.pledge" = "Get TPS quota";
"transaction.list.transaction.type.name.cancelPledge" = "Withdrawal of staking quota";
"transaction.list.transaction.type.name.coin" = "Token Issuance";
"transaction.list.transaction.type.name.cancelCoin" = "Withdrawal of staking tokens";
"transaction.list.transaction.type.name.transfer" = "Transfer";
"transaction.list.transaction.netErrorAndShowAccount" = "Something went wrong with network, click here to check account details";

/* BalanceInfo */
"balance.info.detail.balance.title" = "Balance";
"balance.info.detail.unconfirmed.title" = "Unreceived";
"balance.info.detail.unconfirmed.quota.title" = "(%@ UT)";
"balance.info.detail.pledge.amount.title" = "Staked";
"balance.info.detail.show.transactions.button.title" = "Check transaction history in Ethereum Explorer";
"balance.info.detail.reveice.button.title" = "Receive";
"balance.info.detail.send.button.title" = "Send";
"balance.info.detail.vote" = "Vote";
"balance.info.detail.pledge" = "Get Quota";
"balance.info.detail.exchange.vite" = "VITE Conversion";
"balance.info.detail.pledge.count.content" = "Spendable Quota/Quota Limit";
"balance.info.detail.pledge.none.tip" = "0 UT/0 UT";

/* Address Manage Page */
"address.manage.page.title" = "My %@ Address";
"address.manage.default.address.cell.title" = "Default Address";
"address.manage.address.header.title" = "Addresses";
"address.manage.address.generate.button.title" = "Add Address";
"address.manage.address.generate.button.toast" = "Add up to maximum 100 addresses!";
"address.manage.address.generate.button.already.toast" = "Address already exists";
"address.manage.address.generate.button.error.toast" = "Please input a number";
"address.manage.tip.alert.message" = "Max generation: 100 addresses; Manual address retrieval is required for all other but #1 address on the list";
"address.manage.alert.title" = "Generate New Addresses";
"address.manage.alert.placeholder" = "Input a number between 1 and 100";
"address.manage.alert.tip" = "Bulk generate a specified number of addresses";
"address.manage.tip.alert.ok" = "I know";
"address.manage.default.address.name" = "Untitled";
"address.manage.change.name.alert.title" = "Edit Address Alias";
"address.manage.change.name.alert.placeholder" = "Please input new alias";

/* Send Page */
"send.page.title" = "Send";
"send.page.my.address.title" = "My %@ Address";
"send.page.my.balance.title" = "Balance";
"send.page.my.pledge.title" = "Benefited Stake";
"send.page.my.quota.title" = "Spendable Quota/Quota Limit";
"send.page.my.max.tx.count.title" = "Maximum Amount of Tx";
"send.page.add.my.address.button.title" = "Mine";
"send.page.vite.contacts.button.title" = "VITE Contact Address";
"send.page.scan.address.button.title" = "Scan";
"send.page.to.address.title" = "Recipient";
"send.page.amount.title" = "Amount";
"send.page.all.button.title" = "All";
"send.page.remark.title" = "Comment";
"send.page.send.button.title" = "Send";
"send.page.amount.toolbar.button.title" = "Next";
"send.page.toast.address.error" = "Wrong address, please check the format";
"send.page.toast.amount.error" = "Insufficient Balance";
"send.page.toast.amount.empty" = "Please input balance";
"send.page.toast.amount.zero" = "The amount has to be positive";
"send.page.toast.note.too.long" = "The length of notes has reached limitations";
"send.page.toast.contract.address.support.hex" = "The destination address you transfer to is a contract, the note must be written with legal hexadecimal characters";
"send.page.not.enough.balance.alert.title" = "Insufficient Balance";
"send.page.not.enough.balance.alert.button" = "Cancel";
"send.page.token.info.error" = "Token Info Error";
"send.page.quota.content" = "%@ UTPS";
"send.page.eth.failed" = "(%@). Please check the transaction history before trying again";

/* eth vite exchange */
"eth.vite.exchange.page.title" = "VITE Conversion";
"eth.vite.exchange.page.my.address.title" = "ETH Address";
"eth.vite.exchange.page.my.balance.title" = "Balance";
"eth.vite.exchange.page.to.address.title" = "VITE Address";
"eth.vite.exchange.page.amount.title" = "Conversion Amount";
"eth.vite.exchange.page.amount.placeholder" = "Convert %@ VITE at most";
"eth.vite.exchange.page.send.button.title" = "Convert";
"eth.vite.exchange.page.address.change.button.title" = "Switch";
"eth.vite.exchange.page.exchange.all.button.title" = "All";
"eth.vite.exchange.page.exchange.history.button.title" = "Conversion History";

/* Receive Page */
"Receive.page.token.title" = "Receive";
"Receive.page.mine.title" = "My QRCode";
"Receive.page.token.name.label" = "Scan and Send %@";
"Receive.page.token.amount.button.title" = "Input Amount";
"Receive.page.token.note.label" = "Comment";
"Receive.page.token.amount.alert.title" = "Input Amount";
"Receive.page.wallet.name" = "Vite Wallet";

/* Scan Page */
"Scan.page.title" = "Scan";
"Scan.page.qccode.not.identifiable" = "QRCode cannot be identified";
"Scan.page.qccode.not.found" = "No QR code found";

/* System */
"system.page.logout.loading" = "Logout";
"system.page.cell.change.language" = "Language";
"system.page.cell.change.currency" = "Currency Unit";
"system.page.cell.login.pwd" = "Unlock By Password";
"system.page.cell.login.faceId" = "Unlock By Face ID";
"system.page.cell.login.touchId" = "Unlock By Touch ID";
"system.page.cell.transfer.faceId" = "Use Face ID For Transaction";
"system.page.cell.transfer.touchId" = "Use Touch ID For Transaction";
"system.page.cell.logout.title" = "Logout/switch wallet";
"system.page.cell.upload.log.title" = "Upload Log";
"system.page.cell.upload.log.toast.success" = "Log Uploaded";
"system.page.cell.delete.wallet.title" = "Delete Current Account";
"system.page.cell.delete.wallet.alert.title" = "You can only recover your account by mnemonic word after deleting an account, do you confirm to delete this account?";

/* about us */
"aboutUs.page.cell.blockHeight" = "Current Height";
"aboutUs.page.cell.blockHeight.loading.tip" = "Loading";
"aboutUs.page.cell.version" = "Version";
"aboutUs.page.cell.contact" = "Contact Us";
"aboutUs.page.cell.shareUs" = "Share Vite APP";
"aboutUs.page.cell.official.website" = "Vite.org";
"aboutUs.page.cell.portal.website" = "Vite.net";
"aboutUs.page.cell.blog.website" = "Vite.blog";
"aboutUs.page.email.title" = "Feedback";
"aboutUs.page.email.content" = "\n\n\n\n\nThe advice comes from the using environment as below:\n1.System device: %@\n2.System version:%@\n3.APP version: %@\n4.Language:%@";

/* toast error */
"toast.error.login" = "Login Error";

/* quota manage */
"quota.manage.page.title" = "Get Quota";
"quota.manage.page.input.address.title" = "Quota Beneficiary";
"quota.manage.page.quota.money.title" = "Staking Amount";
"quota.manage.page.quota.quota.title" = "Quota";
"quota.manage.page.quota.money.placeholder" = "Please input amount, minimum 134 VITE";
"quota.manage.page.quota.snapshoot.height.title" = "Staking Freeze Duration";
"quota.manage.page.quota.snapshoot.height.desc" = "Approx %@ days";
"quota.manage.page.submit.btn.title" = "Submit Staking";
"quota.manage.page.check.quotaList.btn.title" = "Staking List";
"quota.manage.page.toast.money.error" = "Staking amount should not be less than 134";
"quota.submit.pop.desc" = "Make sure to stake %@ to obtain quota, you cannot withdraw until about 3 days after staking comes into effect.";
"quota.submit.pop.submit.btn.title" = "Confirm";
"quota.submit.pop.cancel.btn.title" = "Cancel";
"quota.submit.page.quota.address.placeholder" = "Please input beneficiary address";

/* quota alert */
"quota.alert.title" = "Insufficient Quota";
"quota.alert.pow.and.quota.message" = "Short in quota, you can acquire quota by running PoW or staking VITE.";
"quota.alert.need.quota.message" = "Insufficient quota of PoW, we would recommend that you stake VITE to obtain quota.";
"quota.alert.pow.button.title" = "Run PoW";
"quota.alert.quota.button.title" = "Stake VITE";
"quota.float.view.title" = "Computing PoW to Secure Quota for this Transactionâ¦";
"quota.float.view.tip" = "This Transaction costs %@UT";
"quota.pow.finished.float.view.title" = "Transaction Sent";
"quota.pow.finished.float.view.h1" = "You spent %1$@S in this PoW computation, and secured and used %2$@UT.";
"quota.pow.finished.float.view.h2" = "You may withdraw your staked VITE after 3 days. If the quota you received from staking is sufficient for a transaction, you can skip this step of PoW.";
"quota.pow.finished.float.view.pledge.button.title" = "Transact Faster via Staking";

/* Peldge History */
"peldge.message" = "Currently Vite App only supports checking staking list, please go to Web Wallet to withdraw staked tokens on due date if needed.";
"peldge.deadline" = "Due Date";
"peldge.title" = "Staking History";
"peldge.address.title" = "Beneficiary";
"peldge.cancel.peldge.button.title" = "Withdraw";
"peldge.cancel.pledge.withdrawing.title" = "Withdrawing";
"peldge.cancel.pledge.amount.error.toast" = "The minimum withdraw amount is 134 VITE, please stake enough VITE first.";
"peldge.cancel.pledge.agent.error.toast" = "Not common stake, please try withdrawal where you placed the stake.";
/* Vote */
"vote.page.title" = "Vote";
"vote.page.info.nodata.title" = "No Vote";
"vote.page.voteStatus.voteSuccess" = "Successful Vote";
"vote.page.voteStatus.voting" = "Voting";
"vote.page.voteStatus.cancelVoting" = "Revoking";
"vote.page.voteStatus.voteInvalid" = "Invalid Voting";
"vote.page.voteInfo.nodePolls.title" = "My Votes";
"vote.page.nodeStatus.valid.title" = "Active";
"vote.page.nodeStatus.invalid.title" = "Inactive";
"vote.page.voteInfo.alert.quota" = "Unable to revoke vote, you have to run PoW or stake VITE for TPS quota to revoke vote";

/* Vote List*/
"vote" = "Vote";
"vote.list.title" = "Candidate Nodes";
"vote.list.search" = "Search for name or address of candidate nodes";
"vote.list.alert.already.voted" = "You have voted for %@, please make sure this action will overwrite current voting result";
"vote.list.confirm.revote" = "Confirm";
"vote.list.count" = "Votes";
"vote.list.address" = "Address";
"vote.list.alert.quota" = "Unable to vote, you have to run PoW or stake VITE for TPS quota to vote";
"vote.list.search.empty" = "No result, please try another input";
"vote.list.search.no.transaction.before" = "You cannot vote for now as there is no transaction record in your address";

// Contract
"contract.confirm.info" = "Contract Address";

//RefreshFooter
"vite.RefreshBackFooter.IdleText" = "Pull up to load more";
"Vite.RefreshBackFooter.PullingText" = "Release to load more.";
"Vite.RefreshBackFooter.RefreshingText" = "Loading...";
"Vite.RefreshBackFooter.NoMoreDataText" = "No more data";

//Welcome
"introduction.tip.title" = "Transactions cost quota.\nStake to Get Free Quota.";
//"introduction.page.tip1.title" = "Cross-chain multiple token types";
//"introduction.page.tip2.title" = "Decentralized wallet";
//"introduction.page.tip3.title" = "Zero transaction fees";
//"introduction.page.tip4.title" = "Fast transactions";
//"introduction.page.tip1.desc" = "Multi-token support, easy assets management";
//"introduction.page.tip2.desc" = "Private key locally stored, open-sourced assurance";
//"introduction.page.tip3.desc" = "Transactions consume quota, PoW running acquires free quota";
//"introduction.page.tip4.desc" = "Asynchronous architecture, smooth trade";
//"introduction.page.nextBtn.title" = "Start Your Vite Journey";

/* Error Message */
"vite.error.network.error" = "Something went wrong with network, please try again later";
"vite.error.operation.failure" = "Operation failed";
"vite.error.rpc.error.code.not.enough.balance" = "Insufficient balance";
"vite.error.rpc.error.code.not.enough.quota" = "Insufficient quota";
"vite.error.rpc.error.code.id.conflict" = "An ID conflict occurs, please re-submit later";
"vite.error.rpc.error.code.contract.data.illegal" = "Built-in contract error, please try again later(-35004)";
"vite.error.rpc.error.code.refrence.same.snapshoot.block" = "Transactions are sent too frequent, please try again later";
"vite.error.rpc.error.code.contract.method.not.exist" = "Built-in contract method not exist, please try again later(-35006)";
"vite.error.rpc.error.code.no.transaction.before" = "You cannot make any transfer until you receive a transaction.";
"vite.error.rpc.error.code.refrence.snapshoot.block.illegal" = "Snapshot block height is illegal, please try again later";
"vite.error.rpc.error.code.verify.failure" = "System verify failed, please try again later (%@)";

"eth.error.rpc.error.code.not.enough.balance" = "Insufficient balance";
"eth.error.rpc.error.code.not.enough.fee" = "Out of Fee";

/* Tip String */
"pop.page.tip.quota" = "<h1 style=\"font-PingFangSC-Medium;font-size:12;color:#24272B\">What is Quota?</h1><p style=\"font-PingFangSC-Regular;font-size:11;color:#3E4A59\">In the Vite system, users do not purchase the gas required for a transaction by paying a fee, but acquire the computing resource through a quota-based model. Required quota for sending a transaction = the basic quota (request) + quota (the attached text data), quota required to accept a transaction = the basic quota (response). This quota-based resource configuration protocol allows users to obtain higher resource quotas in two ways: </p><p style=\"font-PingFangSC-Regular;font-size:11;color:#3E4A59\">a.Staking VITE to obtain quota</p><p style=\"font-PingFangSC-Regular;font-size:11;color:#3E4A59\">b.Running PoW</p><p style=\"font-PingFangSC-Regular;font-size:11;color:#3E4A59\">Unit of Quota: UTPS, Unit of Transaction per Second.</p><h1 style=\"font-PingFangSC-Medium;font-size:12;color:#24272B\">What is Staking?</h1><p style=\"font-PingFangSC-Regular;font-size:11;color:#3E4A59\">In the Vite system, the user can stake VITE to obtain a certain amount of quota. The minimum value for staking is 134 VITE, and there is no maximum limit; meanwhile, Vite system also supports that the A-address stakes a part of the VITE and allocates the obtained quota to the B address. When users apply to stake, VITE will be sent to the smart contract address instead of another user, and only the user who applies for staking has access to manage the staking amount.</p><h1 style=\"font-PingFangSC-Medium;font-size:12;color:#24272B\">What is PoW?</h1><p style=\"font-PingFangSC-Regular;font-size:11;color:#3E4A59\">Proof of Work (PoW), is a protocol to confirm that you have done a certain amount of work, and is also an economic measure to deter DDoS attacks and other service abuse. It requires the initiator to conduct a certain amount of computing, which means that it may take some time for the computer. In the Vite system, users can obtain a free quota by running the PoW, and also can send a transaction without any annotated information through obtained quota.</p>";
"pop.page.tip.vote" = "<h1 style=\"font-PingFangSC-Medium;font-size:12;color:#24272B\">About Voting</h1><p style=\"font-PingFangSC-Regular;font-size:11;color:#3E4A59\">You can join and vote for 25 SBPs(Snapshot Block Producer), each round of voting lasts 75s, your votes equals the balance of your vote address. Your vote keeps the same the next rounds unless you revoke your vote or vote for another node. Random 23 out of top 25 candidates plus 2 out of candidates ranking 26th to 100th, 25 nodes in total will be elected as SBPs.</p>";
"pop.page.tip.vote.loser" = "<p style=\"font-PingFangSC-Regular;font-size:11;color:#3E4A59\">%@ you had voted for has stopped campaigning for SBP, you may vote again or revoke your vote. If you do not do so, your original vote will be recovered after %@ re-registering.</p>";
"pop.page.tip.ethViteExchange" = "<h1 style=\"font-PingFangSC-Medium;font-size:12;color:#24272B\">Understand VITE Conversion</h1><p style=\"font-PingFangSC-Regular;font-size:11;color:#3E4A59\">You can convert ERC20 VITE  into VITE at Vite Pre-Mainnet through VITE conversion. During conversion, your ERC20 VITE will be transferred to Ethereum black hole address: 0x1111111111111111111111111111111111111111, and you will receive the same amount of VITE in your Vite address after the transaction to Ethereum black hole address has completed. During the conversion, fee of transaction to the Ethereum black hole address come from your current ETH address. After submitting the conversion, please wait at least 30 confirmations in Ethereum network, you can find the transaction history in conversion history.</p>";

// ViteURI
"vite.uri.amount.format.error" = "Wrong format with transaction amount";

// eth
"eth.send.page.my.address.title" = "ETH Address";
"eth.send.page.eth.contacts.button.title" = "ETH Contact Address";
"eth.receive.page.my.address.title" = "My ETH Address";
"eth.page.gasFee.title" = "Gas Fee";
"eth.page.gasFee.slow.title" = "Slow";
"eth.page.gasFee.fast.title" = "Fast";
"eth.page.gasFee.notice.title" = "We will return the rest of gas back to your account";

// eth transaction detail
"eth.transaction.detail.page.title" = "Details";
"eth.transaction.detail.failed" = "Transaction Failed";
"eth.transaction.detail.success" = "Transaction Completed";
"eth.transaction.detail.to.address" = "Receiving Address";
"eth.transaction.detail.from.address" = "Sending Address";
"eth.transaction.detail.amount" = "Amount";
"eth.transaction.detail.gas" = "Gas Fee";
"eth.transaction.detail.hash" = "Transaction Hash";
"eth.transaction.detail.block" = "Block";
"eth.transaction.detail.note" = "Note";
"eth.transaction.detail.go.button.title" = "View More Details on Etherscan";

//token
"token.list.page.search.title" = "Please input token name or contract address";
"token.list.page.section.vite.header" = "Vite Network";
"token.list.page.section.eth.header" = "Ethereum Network";
"token.list.page.section.grin.header" = "GRIN Network";
"token.list.page.ignore.btn.title" = "Ignore";
"token.list.page.ignore.lab.title" = "%d new asset(s)";
"token.list.page.ignore.alter.title" = "Assets ignored will not be informed again, are you sure to ignore the assets below?";
// Contacts Home
"contacts.home.page.title" = "Contact Address";
"contacts.home.page.no.contact.tip" = "Add your first address";
"contacts.home.page.single.no.contact.tip" = "No %@ address yet";
"contacts.home.page.filter.all" = "All";
"contacts.home.page.add.button.title" = "Add";

// Contacts Edit
"contacts.edit.page.add.title" = "Add Contact Address";
"contacts.edit.page.edit.title" = "Edit Contact Address";
"contacts.edit.page.name.title" = "Name";
"contacts.edit.page.address.title" = "Please input address";
"contacts.edit.page.type.select.title" = "Select token type";
"contacts.edit.page.save.button.title" = "Save";
"contacts.edit.page.save.success.tip" = "Successfully added";
"contacts.edit.page.edit.success.tip" = "Successfully saved";
"contacts.edit.page.delete.button.title" = "Delete";
"contacts.edit.page.delete.alert.title" = "Are you sure to delete this address?";

// Address List
"address.list.page.my.title" = "My VITE Address";
"address.list.page.other.title" = "%@ contact address";
"address.list.page.no.address.tip" = "No %@ address yet";

/* WorkFlow */
"workflow.confirm.page.biometryAuthFailed.title" = "Cannot be identified";
"workflow.confirm.page.biometryAuthFailed.back" = "Back";
"workflow.confirm.page.passwordAuthFailed.retry" = "Retry";
"workflow.confirm.page.toast.password.error" = "Wrong password!";

"workflow.toast.transfer.success" = "Send Success";
"workflow.toast.submit.success" = "Submit Successful";
"workflow.toast.cancel.pledge.success" = "Retrieve staking request has sent";
"workflow.toast.vote.success" = "Successfully send vote request";
"workflow.toast.cancel.vote.success" = "Vote revoking request is successfully sent";
"workflow.toast.contract.success" = "Success";

"workflow.congestion.without.pow.alert.title" = "Notice";
"workflow.congestion.without.pow.alert.message" = "The network is currently in Dynamic Quota mode. This means your Quota Limit has been reduced and you can send fewer transactions per second. Do you still want to send a transaction now?";
"workflow.congestion.without.pow.alert.cancel" = "Transact Later";
"workflow.congestion.without.pow.alert.ok" = "Transact Now";
"workflow.congestion.with.pow.alert.title" = "Notice";
"workflow.congestion.with.pow.alert.message" = "The network is currently in Dynamic Quota mode. Your Quota Limit has been reduced and your Spendable Quota is not enough to send this transaction. Please transact later";
"workflow.congestion.with.pow.alert.cancel" = "Transact Later";

"workflow.fast.get.quota.title" = "Instantly Getting Quota";
"workflow.fast.get.quota.message" = "Please confirm that youâd like to get quota by staking 134 VITE from current address. You can withdraw the staked amount from the Stake History section 3 days later.";
"workflow.fast.get.quota.tip" = "You can also get quota for any other address by %@.";
"workflow.fast.get.quota.link" = "clicking here";

/* Confirm Transaction Page */
"confirm.transaction.page.biometry.confirm.reason" = "Verify";
"confirm.transaction.address.title" = "Recipient";
"confirm.transaction.amount.title" = "Amount";
"confirm.transaction.fee.title" = "Fee";
"confirm.transaction.quota.title" = "Quota";
"confirm.transaction.page.use.password" = "Use password";
"confirm.transaction.page.pw.title" = "Please input password";
// vite transfer
"confirm.transaction.page.vite.transfer.title" = "Send";
"confirm.transaction.page.vite.confirm.button" = "Confirm";
// vite pledge
"confirm.transaction.page.vite.pledge.title" = "Get Quota";
"confirm.transaction.page.vite.cancel.pledge.title" = "Withdraw";
"confirm.transaction.page.vite.pledge.confirm.button" = "Confirm";
// vite vote & cancel
"confirm.transaction.page.vite.vote.transfer.title" = "Vote";
"confirm.transaction.page.vite.vote.confirm.button" = "Confirm";
"confirm.transaction.page.vite.vote.node.name" = "Node Name";
"confirm.transaction.page.vite.cancel.vote.transfer.title" = "Revoke Voting";
"confirm.transaction.page.vite.cancel.vote.confirm.button" = "Confirm";
// vite dex desposit & withdraw
"confirm.transaction.page.vite.dex.deposit.transfer.title" = "Deposit to Exchange";
"confirm.transaction.page.vite.dex.deposit.confirm.button" = "Confirm";
"confirm.transaction.page.vite.dex.withdraw.transfer.title" = "Withdraw to Wallet";
"confirm.transaction.page.vite.dex.withdraw.confirm.button" = "Confirm";
// vite call contract
"confirm.transaction.page.vite.call.contract.transfer.title" = "Payment";
"confirm.transaction.page.vite.call.contract.confirm.button" = "Confirm";
// eth transfer
"confirm.transaction.page.eth.transfer.title" = "Send";
"confirm.transaction.page.eth.confirm.button" = "Confirm";
// eth vite exchange
"confirm.transaction.page.eth.vite.exchange.title" = "VITE Conversion";
"confirm.transaction.page.eth.vite.exchange.confirm.button" = "Convert";
// grin transfer
"confirm.transaction.page.grin.transfer.title" = "Send";
"confirm.transaction.page.grin.confirm.button" = "Confirm";

// Grin
"grin.balance.total" = "Total";
"grin.balance.spendable" = "Spendable";
"grin.balance.awaiting" = "Awaiting Confirmation";
"grin.balance.locked" = "Locked by Previous Transaction";
"grin.wallet.check" = "Check";
"grin.wallet.check.desc" = "Wallet check will scan the chain and cancel all pending transactions, unlock any locked outputs, restore any missing outputs, and ensure your wallet's content is consistent with the chain's version.Will consume a large amount of cellular data, it is recommended to continue the process on Wi-Fi";
"grin.txType.sent" = "Created";
"grin.txType.waitToSign" = "Unreceived";
"grin.txType.received" = "Received";
"grin.txType.waitToFinalize" = "Unfinalized";
"grin.txType.finalized" = "Posting";
"grin.txType.confirmed" = "Confirmed";
"grin.txType.confirmedCoinbase" = "Confirmed Coinbase";
"grin.txType.Canceled" = "Canceled";
"grin.tx.Cancele" = "Canceled";
"grin.tx.Repost" = "Repost";
"grin.tx.copyId" = "Copy";
"grin.tx.useVite" = "Use VITE Address";
"grin.sent.useVite.desc" = "Send GRIN through VITE address is sharing transaction file encrypted by Vite through VITE address, which ensures only the real recipient can decrypt the file.";
"grin.sent.useHttp" = "Use HTTP Address";
"grin.sent.useHttp.desc" = "You can transfer GRIN to any wallet supporting receiving GRIN through HTTP address, however we suggest using VITE address or file to transfer GRIN to users who use Vite wallet.";
"grin.sent.useFile" = "Use Transaction File";
"grin.know" = "I know";
"grin.notSeeAgain" = "Don't show me again";
"grin.sent.title" = "Send GRIN";
"grin.sent.amount" = "Amount";
"grin.receive.ture.amount" = "Actual Amount";
"grin.sent.fee" = "Fees";
"grin.sent.creatFile" = "Generate Transaction File";
"grin.shareFile.desc" = "Please sign for the transaction";
"grin.txFile.init.status" = "Created";
"grin.txFile.id" = "Transaction ID";
"grin.shareFile" = "Share Transaction File";
"grin.finalize.title" = "Send GRIN";
"grin.finalize.desc" = "Transaction has been received by the recipient. Please finalize and broadcast the transaction.";
"grin.txFile.received.status" = "The receipt has been confirmed";
"grin.finalize" = "Finalize and Broadcast";
"grin.finalized.alertTitle" = "Transaction Finalized";
"grin.finalized.alertDesc" = "Your GRIN transaction has started to be broadcast";
"grin.sent.next" = "Next";
"grin.sent.suggest.useVite.title" = "Notice";
"grin.sent.suggest.useVite.desc" = "If you want to send GRIN to a Vite Wallet user, sending through VITE address is recommended for it is safer and cheaper.";
"grin.sent.switch" = "VITE Address";
"grin.sent.stillUseHttp" = "HTTP Address";
"grin.sent.http.success" = "You have successfully sent GRIN transfer request";
"grin.sent.vite.success" = "Your transaction has sent.";
"grin.receiveByVite.addressCopyed" = "Your VITE address for receiving GRIN has been copied to the clipboard.";
"grin.receiveByVite.desc" = "Please note that web wallet doesn't support native GRIN. If you receive the VITE transaction with GRIN file, you should contact the sender to cancel the transaction and resend GRIN.";
"grin.iknow" = "I know";
"grin.thisIsFirstViteAddress" = "This is your first VITE address";
"grin.receiveByHttp.addressCopyed" = "Your HTTP address for receiving GRIN has been copied to the clipboard";
"grin.receiveByHttp.desc" = "As shown in the picture above, Vite will do the collection and remit for you when you choose to transfer or receive GRIN through HTTP address. There are transaction fees in both the two steps above.";
"grin.receive.title" = "Receive GRIN";
"grin.receive.sented" = "Created";
"grin.creatTime" = "Creation Time";
"grin.signAndShare" = "Receive and Share";
"grin.sent.btnTitle" = "Send";
"grin.receive.BtnTitle" = "Receive";
"grin.notice.title" = "Notice";
"grin.teach.vite.receive.title" = "Receive GRIN through VITE Address";
"grin.teach.http.receive.title" = "Receive GRIN though HTTP Address";
"grin.teach.vite.sent.title" = "Send GRIN through VITE Address";
"grin.teach.http.sent.title" = "Send GRIN though HTTP Address";
"grin.txid.title" = "Transaction ID";
"grin.switchAddress" = "Switch Address";
"grin.http.address" = "HTTP Address";
"grin.vite.address" = "VITE Address";
"grin.sendPageViteContactsButtonTitle" = "GRIN Contact Address";
"grin.canceled" = "Canceled";
"grin.makeSureToShare" = "Please make sure to share the transaction file with sender";
"grin.txbyfile.shareSentFileDesc" = "Please make sure to share the transaction file with the recipient and ask for a confirmation file.";
"grin.txbyfile.receiveSentFileDesc" = "Please sign for the transaction";
"grin.txbyfile.shareReceiveFileDesc" = "Please make sure to share the transaction file with sender";
"grin.txbyfile.finalizeReceiveFileDesc" = "Transaction has been received by the recipient. Please finalize and broadcast the transaction.";
"grin.txbyfile.initStatus.sender" = "Created";
"grin.txbyfile.initStatus.receiver" = "Awaiting Receiving";
"grin.txbyfile.receivedStatus.receiver" = "Received";
"grin.txbyfile.receivedStatus.sender" = "Awaiting Finalization";
"grin.creat.syncronizing" = "Creat and sync, 3 mins estimated";
"grin.recover.syncronizing" = "Recover and sync, 3 mins estimated";
"grin.creating" = "Grin wallet initializing, please wait a moment.";
"grin.pay.title.creat" = "Create";
"grin.pay.title.finalize" = "Finalize";

"grin.teach.file.send.desc" = "To transfer using Vite wallet, all you need to do is to share the transaction file with the recipient, open the file returned by the recipient by Vite wallet and finalize the transaction. After clicking \"Share the transaction file\", Vite wallet will show App usable in your mobile phone, you can choose whichever way you like, you can also save the file into your mobilephone and share by yourself.";
"grin.teach.file.receive.desc" = "To transfer using Vite wallet, all you need to do is to open the file, click the \"Receive and share\" button, and return the confirm-to-receive file with the sender. After clicking \"Receive and share\",Vite wallet will show App usable in your mobile phone, you can choose whichever way you like, you can also save the file into your mobilephone and share by yourself. Vite wallet supports .grinslate file and .json file, and only when the file name containing \"response\" will it be recognized and opened successfully.";
"grin.teach.file.send.title" = "Send GRIN through Transaction File";
"grin.teach.file.receive.title" = "Receive GRIN through Transaction File";
"grin.teach.http.receive.copyHttpAddress" = "Copy HTTP Address";
"grin.teach.vite.receive.copyViteAddress" = "Copy VITE Address";
"grin.teach.vite.send.startSend" = "Start to Send";
"grin.txMethod.http" = "HTTP Address";
"grin.txMethod.vite" = "VITE Address";
"grin.txMethod.file" = "Transaction File";

"grin.detail.fromMine" = "Coinbase";
"grin.detail.txStatus" = "Transaction State";
"grin.detail.txCompleted" = "Transaction has completed.";
"grin.detail.txCancelled" = "Transaction has been canceled.";
"grin.detail.txFileReecivedAndCanShare" = "Transaction has been received, please share the file with the sender, you can choose the way as you like.";
"grin.detail.txReceived" = "Transaction has been received.";
"grin.detail.txReceivedAndCanAskGatewaytoSend" = "You have already received the transaction, if the state doesn't go to \"Confirmed\", please try \"Request for Vite gateway to resend\".";
"grin.detail.txNotReceivedAndCanAskGatewaytoSend" = "If the state stays \"Unreceived\" for a long time, please try \"Request for Vite gateway to resend\".";
"grin.detail.gateway.confirmConntLessThanTen" = "Vite gateway has received the transaction, and will transfer to you after 10 confirmations.";
"grin.detail.gateway.confirmConntBiggerThanTen" = "Vite gateway confirmation has reached 10, if the state not changing to \"Unreceived\" for a long time, please try \"Request for Vite gateway to resend\".";
"grin.detail.confirmLessThanThen" = "Transaction has been confirmed, after 10 confirmation, \"Actual Amount\" will go to \"Spendable Amount\".";
"grin.detail.gateway" = "Vite Gateway Collection";
"grin.detail.gatewayReceived" = "Vite gateway has received the transaction, and will transfer to you after 10 confirmations.";
"grin.detail.txpostingAndCanRepost" = "Transaction has started to be broadcast, you can click \"Repost\" to try again if the transaction hasn't been confirmed for long";
"grin.detail.pleaseFinalize" = "Please finalize the transaction";
"grin.detail.pleaseFinalize2" = "Please wait for the transaction to be broadcast";
"grin.detail.txFileCreatedAndCanShare" = "Transaction file has been created, please make sure to share the file with the recipient(share as you like)and ask for a received file returned.";
"grin.detail.txFile" = "Transaction File";
"grin.detail.txFinaziledAndPosting" = "Transaction has been finalized and broadcast.";
"grin.detail.txisPostingPlsWait" = "Transaction is in broadcast, please wait for confirmation.";
"grin.detail.waitHerOpenViteWalletToReceive" = "Please wait for the recipient to open Vite wallet and receive the transaction.";
"grin.detail.pleaseReciveAndShare" = "Please sign the transaction and share the file with the sender, you can choose whichever way you prefer.";
"grin.detail.gatewaysend" = "VITE Transaction Send";
"grin.detail.repoat" = "Repost";
"grin.node.configNode" = "Configurate Full Node.";
"grin.node.addNode" = "Add New Full Node";
"grin.node.edit.nodeAddressTitle" = "Full Node Address";
"grin.node.edit.apiSecretTitle" = "Key";
"grin.node.select.canNotConnect" = "Failed to connect with the full node.";
"grin.detail.slateCopied" = "Slate ID Copied.";
"grin.send.illegalAmmount" = "Illegal transfer amount";
"grin.detail.gatewayResend" = "Request for Vite gateway to Resend";

// CrossChain Transfer & Receive

"crosschain.tokendetail" = "Token Details";
"crosschain.deposit" = "Cross-Chain Deposit";
"crosschain.withdraw" = "Cross-Chain Withdraw";
"crosschain.withdraw.btnTitle" = "Withdraw";
"crosschain.deposit.btnTitle" = "Deposit";
"crosschain.deposit.vitewallet" = "Deposit from Vite Wallet";
"crosschain.deposit.otherwallet" = "Deposit from Another Wallet";
"crosschain.deposit.history" = "Deposit History";
"crosschain.withdraw.history" = "Withdrawal History";
"crosschain.deposit.minAmountDesc" = "Only %@ is accepted by the address below, and the minimum amount should be no less than %@";
"crosschain.deposit.minComfirm" = "The process should take %@ confirmation(s), please wait.";
"crosschain.deposit.address" = "Deposit Address";
"crosschain.deposit.scanAddress" = "Please scan the address QR code";
"crosschain.deposit.scanLabel" = "Please scan the %@ code";
"crosschain.deposit.labelDesc" = "Please do use %@ together with the Deposit Address, or you will lose the token(s).";

"crosschain.deposit.about" = "<h1 style=\"font-PingFangSC-Medium;font-size:12;color:#24272B\">About Cross-Chain Deposit</h1><p style=\"font-PingFangSC-Regular;font-size:11;color:#3E4A59\">Making a cross-chain deposit allows %@ to be mapped into the Vite network. After that, you will also be able to make a cross-chain withdrawal. %@ balance in your Vite wallet will be reduced accordingly when you make a cross-chain deposit from your Vite wallet.</p>";
"crosschain.deposit.other.about" = "<h1 style=\"font-PingFangSC-Medium;font-size:12;color:#24272B\">About Cross-Chain Deposit</h1><p style=\"font-PingFangSC-Regular;font-size:11;color:#3E4A59\">Making a cross-chain deposit allows %@ to be mapped into the Vite network. After that, you will also be able to make a cross-chain withdrawal.</p>";
"crosschain.withdraw.eth.myAddress" = "My ETH Address";
"crosschain.deposit.min" = "Minimum Deposit Amount ";
"crosschain.withdraw.min" = "Minimum Withdrawal Amount ";
"crosschain.deposit.min.alert" = "The deposit amount cannot be less than ";
"crosschain.deposit.all" = "Deposit All";
"crosschain.deposit.amount" = "Deposit Amount";
"crosschain.withdraw.all" = "Withdraw All";
"crosschain.withdraw.amount" = "Withdrawal Amount";
"crosschain.tokenDetail.shortname" = "Symbol";
"crosschain.tokenDetail.id" = "Token ID";
"crosschain.tokenDetail.name" = "Token Name";
"crosschain.tokenDetail.address" = "Coin Forging Address";
"crosschain.tokenDetail.amount" = "Total Issuance";
"crosschain.tokenDetail.digit" = "Decimals";
"crosschain.tokenDetail.unit" = "";
"crosschain.tokenDetail.issuance" = "Open to Additional Issue";
"crosschain.tokenDetail.issuance.true" = "Yes";
"crosschain.tokenDetail.issuance.false" = "No";
"crosschain.tokenDetail.date" = "Issuance Date";
"crosschain.tokenDetail.desc" = "Description";
"crosschain.status.waitToConfirm" = "%@ Chain Unconfirmed";
"crosschain.status.confirmed" = "Confirmed";
"crosschain.status.tot.exceed.limit" = "Exceed the limit";
"crosschain.status.wrong.address" = "Wrong transfer address";
"crosschain.status.gatewayReceived" = "Deposit by Gateway";
"crosschain.status.withdraw.failed" = "Withdrawal Failed";
"crosschain.status.failedBecausePoor" = "Insufficient amount";
"crosschain.withdraw.fee.desc" = "This fee is charged by the gateway.";
"crosschain.withdraw.aboutfee" = "About Fee";
"crosschain.status.failed" = "Deposit Failed";
"crosschain.beta.alert" = "Current is a beta version, Please don't deposit large amount in your account.";
"crosschain.fee" = "Fee";
"crosschain.withdraw.gatewayispoor" = "Amount exceeds the %@-%@ limit, please contact gateway@vite.org to send out.";
"crosschain.gatewaydetail.title" = "Gateway Details";
"crosschain.gatewaydetail.name" =  "Gateway Name";
"crosschain.gatewaydetail.webset" =  "Official Website";
"crosschain.gatewaydetail.email" = "Service Mailbox";
"crosschain.gatewaydetail.statement" = "Terms of Service";
"crosschain.gatewaydetail.host" = "Gateway URL";
"crosschain.gatewaydetail.abstract" = "Introduction";
"crosschain.statement.other.desc" = "This Service is provided by %@. Vite Platform assumes no responsibility for the activities performed by %@ and does not play a role in the relationship between %@ and users of Vite Platform.\n\nBy using services from %@, you agree to be bound by %@ %@. If you do not agree to these terms, please refrain from using service from %@.\n\nIn case of problems with verification or payment processing, please contact %@ support team at %@.";
"crosschain.statement.other.desc0" = "This Service is provided by %@. Vite Platform assumes no responsibility for the activities performed by %@ and does not play a role in the relationship between %@ and users of Vite Platform.";
"crosschain.statement.other.desc1" = "By using services from %@, you agree to be bound by %@ %@. If you do not agree to these terms, please refrain from using service from %@.";
"crosschain.statement.other.desc2" = "In case of problems with verification or payment processing, please contact %@ support team at %@.";
"crosschain.statement.vite.desc" = "This Service is provided by %@.\n\nBy using services from %@, you agree to be bound by %@%@. If you do not agree to these terms, please refrain from using service from %@.\n\nIn case of problems with verification or payment processing, please contact %@ support team at %@.";
"crosschain.statement.vite.desc0" = "This Service is provided by %@.";
"crosschain.statement.vite.desc1" = "By using services from %@, you agree to be bound by %@ %@. If you do not agree to these terms, please refrain from using service from %@.";
"crosschain.statement.vite.desc2" = "In case of problems with verification or payment processing, please contact %@ support team at %@.";
"crosschain.statement.detail" = "Terms of Service";
"crosschain.statement.agree" = "By clicking Next, you agree with the %@'s %@";
"crosschain.statement.title" = "Important Notice";

"unit.Million" = " Million";
"unit.Billion" = " Billion";
"unit.Trillion" = " Trillion";

"exchange.history" = "Purchase History";
"exchange.card.title" = "Buy VITE";
"exchange.titley" = "Instant Purchase";
"exchange.buy" = "Buy";
"exchange.price" = "Rate: ";
"exchange.amount" = "Amount: ";
"exchange.limit.onetime" = "Single Transaction Limit: %@ - %@ VITE";
"exchange.limit.oneday" = "Daily Transaction Limit %@ VITEï¼Unused Daily Limitï¼%@ VITE\n\n\n";
"exchange.limit.alert" = "The amount you entered is invalid. A single transaction should be at least %@ VITE and at most %@ VITE, and the daily transaction limit is %@ VITE.";


/* ViteConnect */
"bifrost.connect.tip.in.wallet.home" = "ViteConnect Connected";
"bifrost.alert.tip.title" = "Notice";
"bifrost.alert.approve.session.message" = "Please confirm the following link\n%@";
"bifrost.alert.approve.session.another.address.message" = "The address you scanned now is not consistent with the one on web platform. Continue login with App address?\n(%@)";
"bifrost.alert.approve.session.another.address.ok" = "Confirm to login";
"bifrost.alert.approve.session.another.address.cancel" = "Back";

"bifrost.alert.switch.address.message" = "ViteConnect is connected, switch address will break network connection. Make sure to switch address";

"bifrost.alert.quit.title" = "Make sure to logout ViteConnect?";

"bifrost.home.page.free.header" = "ViteConnect Connected";
"bifrost.home.page.free.content" = "You have no transaction yet";
"bifrost.home.page.free.address.title" = "Address";
"bifrost.home.page.free.history.title" = "Transactions Signed";
"bifrost.home.page.free.auto.sign.title" = "Auto Sign";
"bifrost.home.page.free.auto.sign.confirm.title" = "Password";

"bifrost.home.page.busy.header" = "You are making changes on ViteX & Web Wallet";
"bifrost.home.page.busy.content" = "Please confirm transaction information below";
"bifrost.toast.operation.success" = "Operation Successful";

"bifrost.list.page.title" = "Signing Transaction List";
"bifrost.list.page.status.pending" = "Awaiting Signature";
"bifrost.list.page.status.processing" = "Signing";
"bifrost.list.page.status.failed" = "Failure";
"bifrost.list.page.status.finished" = "Success";
"bifrost.list.page.status.canceled" = "Canceled";

"bifrost.task.detail.page.busy.header" = "Signed Transactions Details";

"bifrost.error.message.timeout" = "Connection time out, please try again later";
"bifrost.error.message.unknown" = "Connection Error, please try again later";

// operation
"bifrost.operation.register.sbp" = "Register SBP";
"bifrost.operation.register.update.sbp" = "Update SBP";
"bifrost.operation.cancel.register.sbp" = "Cancel SBP Registration";
"bifrost.operation.vote" = "Voting";
"bifrost.operation.cancel.vote" = "Revoke Voting";
"bifrost.operation.extract.reward" = "Claim Rewards";
"bifrost.operation.pledge" = "Get Quota";
"bifrost.operation.cancel.pledge" = "Retrieve Staking for Quota";
"bifrost.operation.coin" = "Token Issuance";
"bifrost.operation.cancel.coin" = "Retrieve Staking for Issuance";
"bifrost.operation.transfer" = "Send";
"bifrost.operation.vx.deposit" = "ViteX Deposit";
"bifrost.operation.vx.withdraw" = "ViteX Withdrawal";
"bifrost.operation.across.chain.withdraw" = "Cross-Chain Send";
"bifrost.operation.vx.order" = "Place Order on ViteX";
"bifrost.operation.vx.cancel.order" = "Cancel Order on ViteX";

"bifrost.operation.function.title" = "Contract Invoke";
"bifrost.operation.title.contract.address" = "Contract Address";
"bifrost.operation.title.amount" = "Amount";
"bifrost.operation.title.fee" = "Fee";
"bifrost.operation.title.data" = "Data";

//bnb
"token.list.page.section.bnb.header" = "Binance Network";
"bnb.send.page.feeView.titleLabel.title" = "Fee";
"bnb.send.page.addressTitleLabel.titleLabel.title" = "BNB Address";
"bnb.send.page.eth.contacts.button.title" = "BNB Contacts";
"bnb.txType.newOrder.title" = "Place Order";
"bnb.txType.issueToken.title" = "Issue Asset";
"bnb.txType.burnToken.title" = "Burn";
"bnb.txType.listToken.title" = "Listing";
"bnb.txType.cancelOrder.title" = "Cancel Order";
"bnb.txType.freezeToken.title" = "Freeze Token";
"bnb.txType.unfreezeToken.title" = "Unfreeze Token";
"bnb.txType.transfer.title" = "Transfer";
"bnb.txType.proposal.title" = "Proposal Request";
"bnb.txType.vote.title" = "Vote";
"bnb.txType.mint.title" = "MintMsg";
"bnb.txType.deposit.title" = "Deposit";

// Buildin

"buildin.transfer.utf8string.function.title" = "Transfer";
"buildin.transfer.utf8string.item0.title" = "Transaction Address";
"buildin.transfer.utf8string.item1.title" = "Amount";
"buildin.transfer.utf8string.item2.title" = "Comment";

"buildin.transfer.cross.chain.function.title" = "Cross-Chain Send";
"buildin.transfer.cross.chain.item0.title" = "Amount";
"buildin.transfer.cross.chain.item1.title" = "Fee";
"buildin.transfer.cross.chain.item2.title" = "Receive Address";

"buildin.vote.function.title" = "Vote";
"buildin.vote.item0.title" = "SBP Candidates";
"buildin.vote.item1.title" = "Votes";

"buildin.coin.issuance.function.title" = "Token Issuance";
"buildin.coin.issuance.item0.title" = "Issuance Address";
"buildin.coin.issuance.item1.title" = "Token Name";
"buildin.coin.issuance.item2.title" = "Token Symbol";
"buildin.coin.issuance.item3.title" = "Total Supply";
"buildin.coin.issuance.item4.title" = "Decimals";
"buildin.coin.issuance.item5.title" = "Re-issuable";
"buildin.coin.issuance.item5.yes.value" = "YES";
"buildin.coin.issuance.item5.no.value" = "NO";
"buildin.coin.issuance.item6.title" = "Max Supply";
"buildin.coin.issuance.item7.title" = "Issuance Fee";

"buildin.coin.transfer.ownership.function.title" = "Transfer Ownership";
"buildin.coin.transfer.ownership.item0.title" = "Token Name";
"buildin.coin.transfer.ownership.item1.title" = "Token Symbol";
"buildin.coin.transfer.ownership.item2.title" = "Recipient Address";

"buildin.coin.reissue.token.function.title" = "Re-issue Token";
"buildin.coin.reissue.token.item0.title" = "Token Name";
"buildin.coin.reissue.token.item1.title" = "Token Symbol";
"buildin.coin.reissue.token.item2.title" = "Beneficiary Address";
"buildin.coin.reissue.token.item3.title" = "Amount";

"buildin.coin.change.to.nonissuable.function.title" = "Change to Non-issuable";
"buildin.coin.change.to.nonissuable.item0.title" = "Token Name";
"buildin.coin.change.to.nonissuable.item1.title" = "Token Symbol";

"buildin.dex.transfer.token.owner.function.title" = "Transfer Token's Ownership";
"buildin.dex.transfer.token.owner.item0.title" = "Token Name";
"buildin.dex.transfer.token.owner.item1.title" = "Token Symbol";
"buildin.dex.transfer.token.owner.item2.title" = "Recipient Address";

"buildin.dex.transfer.pair.function.title" = "Transfer Trading pair's Ownership";
"buildin.dex.transfer.pair.item0.title" = "Name";
"buildin.dex.transfer.pair.item1.title" = "Recipient Address";

"buildin.dex.adjust.fees.function.title" = "Adjust Fees";
"buildin.dex.adjust.fees.item0.title" = "Name";
"buildin.dex.adjust.fees.item1.title" = "Current Address";
"buildin.dex.adjust.fees.item.maker.title" = "Adjusted Maker Fees";
"buildin.dex.adjust.fees.item.taker.title" = "Adjusted Taker Fees";

"buildin.dex.open.trading.pair.function.title" = "Open Trading Pair";
"buildin.dex.open.trading.pair.item0.title" = "Name";
"buildin.dex.open.trading.pair.item1.title" = "Current Address";
"buildin.dex.open.trading.pair.item2.title" = "Listing Fee";

"buildin.dex.suspend.trading.pair.function.title" = "Suspend Trading Pair";
"buildin.dex.suspend.trading.pair.item0.title" = "Name";
"buildin.dex.suspend.trading.pair.item1.title" = "Current Address";

"buildin.dex.recover.trading.pair.function.title" = "Recover Trading Pair";
"buildin.dex.recover.trading.pair.item0.title" = "Name";
"buildin.dex.recover.trading.pair.item1.title" = "Current Address";

"buildin.dex.staking.as.mining.function.title" = "Staking as Mining";
"buildin.dex.staking.as.mining.item0.title" = "Current Address";
"buildin.dex.staking.as.mining.item1.title" = "Amount";

"buildin.dex.cancel.staking.as.mining.function.title" = "Cancel Staking as Mining";
"buildin.dex.cancel.staking.as.mining.item0.title" = "Current Address";
"buildin.dex.cancel.staking.as.mining.item1.title" = "Amount";

"buildin.dex.become.vip.function.title" = "Become a VIP";
"buildin.dex.become.vip.item0.title" = "Current Address";
"buildin.dex.become.vip.item1.title" = "Amount";

"buildin.dex.cancel.vip.function.title" = "Cancel VIP";
"buildin.dex.cancel.vip.item0.title" = "Current Address";
"buildin.dex.cancel.vip.item1.title" = "Amount";

"buildin.dex.lock.vx.function.title" = "Stake";
"buildin.dex.lock.vx.item0.title" = "Current Address";
"buildin.dex.lock.vx.item1.title" = "Amount";

"buildin.dex.un.lock.vx.function.title" = "Retrieve";
"buildin.dex.un.lock.vx.item0.title" = "Current Address";
"buildin.dex.un.lock.vx.item1.title" = "Amount";

"buildin.dex.cancel.stake.function.title" = "Retrieve Staking";
"buildin.dex.cancel.stake.item0.title" = "Current Address";

// app scheme
"app.scheme.home.page.busy.header" = "Transaction Confirmation";
"app.scheme.home.page.busy.content" = "Please confirm transaction information below";
"app.scheme.network.error" = "Network Error";


"copyed" = "Successfully copied";

"fund.title.wallet" = "Wallet Asset";
"fund.title.vitex" = "Exchange Asset";
"fund.title.toWallet" = "Withdraw to Wallet";
"fund.title.toVitex" = "Deposit to Exchange";
"fund.walletAddress" = "My Address";
"fund.walletFound" = "Wallet Balance";
"fund.quotaInfo" = "Spendable Quota/Quota Limit";
"fund.deposit.amount" = "Transfer Amount";
"fund.deposit.all" = "All";
"fund.quotaSpend" = "Quota";
"fund.deposit" = "Transfer";
"fund.vitexFound" = "Available Balance";
"fund.withdraw.amount" = "Transfer Amount";
"fund.withdraw" = "Transfer";
"fund.vitex.all" = "Exchange Total Balance";
"fund.vitex.available" = "Exchange Available Balance";
"fund.tooBig" = "The amount you entered exceeds available balance, please enter again";
"fund.withdraw.placeholder" = "Please enter transfer amount";
"fund.deposit.placeholder" = "Please enter transfer amount";
"fund.cannotDeposit" = "Unable to transfer due to insufficient wallet balance";
"fund.cannotWithDraw" = "Unable to transfer due to insufficient exchange balance";
"fund.DepositSuccess" = "Transfer successful. Check exchange balance?";

"transfer.from" =  "From";
"transfer.wallet.account" =  "Wallet Account";
"transfer.to" =  "To";
"transfer.dex.account" =  "Exchange Account";
"transfer.amount" =  "Amount";
"transfer.available" =  "Balance: ";
"transfer.title" =  "Transfer";

"market.favourite" =  "Favorites";
"market.searchhistory" =  "Search History";
"market.title" =  "Exchange";
"market.about" =  "Get Started with ViteX";
"market.name" =  "Name";
"market.price" =  "Last Price";
"market.percent" =  "Change";
"market.operator" =  "Operators";
"market.switch" =  "Exchange";

// market detail
"market.detail.page.segment.order.book.title" = "å§æè®¢å";
"market.detail.page.segment.last.trades.title" = "ææ°æäº¤";
"market.detail.page.segment.token.info.title" = "ä»£å¸";
"market.detail.page.segment.operator.into.title" = "è¿è¥å";

"market.detail.page.info.high.title" = "é«";
"market.detail.page.info.low.title" = "ä½";
"market.detail.page.info.vol.title" = "24H";

"market.detail.page.kline.type.min1.title" = "1åé";
"market.detail.page.kline.type.min30.title" = "30åé";
"market.detail.page.kline.type.hour1.title" = "1å°æ¶";
"market.detail.page.kline.type.hour6.title" = "6å°æ¶";
"market.detail.page.kline.type.hour12.title" = "12å°æ¶";
"market.detail.page.kline.type.day1.title" = "1å¤©";
"market.detail.page.kline.type.week1.title" = "1å¨";

"market.detail.page.value.time.title" = "æ¶é´";
"market.detail.page.value.open.title" = "å¼";
"market.detail.page.value.high.title" = "é«";
"market.detail.page.value.low.title" = "ä½";
"market.detail.page.value.close.title" = "æ¶";
"market.detail.page.value.diff.title" = "æ¶¨è·é¢";
"market.detail.page.value.extent.title" = "æ¶¨è·å¹";
"market.detail.page.value.vol.title" = "æäº¤é";

"market.detail.page.depth.vol.title" = "æ°é(%@)";
"market.detail.page.depth.price.title" = "ä»·æ ¼(%@)";





// DeFi
"defi.home.page.title" =  "DeFi";
"defi.home.page.borrow.button.title" =  "æè¦åå¸";
"defi.home.page.my.defi.button.title" =  "æçDeFi";
"defi.home.page.all.product" =  "ææäº§å";
"defi.home.page.sort.title" =  "è¯·éæ©æåº";
"defi.home.page.sort.publish.time" =  "åå¸æ¶é´ååº";
"defi.home.page.sort.remain.time" =  "å©ä½è®¤è´­æ¶é´ä»ç­å°é¿";
"defi.home.page.sort.earnings" =  "å¹´åæ¶ççä»é«å°åº";
"defi.home.page.sort.borrow.time" =  "åæ¬¾æéä»ç­å°é¿";
"defi.home.page.sort.progress" =  "è®¤è´­è¿åº¦ä»é«å°ä½";

"defi.home.page.cell.end.time.format" =  "%@å¤©%@";
"defi.home.page.cell.end.time" =  "%@åç»æè®¤è´­";
"defi.home.page.cell.borrow.time" =  "%@å¤©åå¸æé";
"defi.home.page.cell.buy.button.title" =  "ç«å³æ¢è´­";

// My DeFi
"defi.my.page.title" =  "æçDeFi";
"defi.my.page.my.loan.account.amount" =  "åºç¡ä½é¢";
"defi.my.page.my.loan.loan.amount" =  "åå¸ä½é¢";
"defi.my.page.my.loan.button.transfer.title" =  "åè½¬";
"defi.my.page.my.loan.button.bil.title" =  "æ¥çæµæ°´";

"defi.my.page.my.loan.title" =  "æçåå¸";
"defi.my.page.my.loan.sort.all" =  "å¨é¨";
"defi.my.page.my.loan.sort.on.sale" =  "è®¤è´­ä¸­";
"defi.my.page.my.loan.sort.failed" =  "å°ææªå®ç½";
"defi.my.page.my.loan.sort.success" =  "æåå®ç½";
"defi.my.page.my.loan.sort.cancel" =  "å·²åæ¶";
"defi.my.page.my.loan.sort.refunding" =  "åå¸å°æå¾è¿æ¬¾";
"defi.my.page.my.loan.sort.refunded" =  "åå¸å°æå·²è¿æ¬¾";

"defi.my.page.my.subscribe.issued.earnings" =  "å·²åæ¾æ¶ç";
"defi.my.page.my.subscribe.predict.amount" =  "é¢è®¡æ»æ¶ç";
"defi.my.page.my.subscribe.subscribe.amount" =  "å·²è®¤è´­éé¢";
"defi.my.page.my.subscribe.earnings.rate" =  "æçæ¶çç";

"defi.my.page.my.subscribe.title" =  "æçè®¤è´­";
"defi.my.page.my.subscribe.sort.all" =  "å¨é¨";
"defi.my.page.my.subscribe.sort.on.sale" =  "è®¤è´­ä¸­";
"defi.my.page.my.subscribe.sort.failed" =  "å°ææªå®ç½";
"defi.my.page.my.subscribe.sort.success" =  "æåå®ç½";
"defi.my.page.my.subscribe.sort.cancel" =  "å·²åæ¶";

// My DeFi Loan
"defi.my.page.my.loan.cell.header.end.time" =  "%@åç»æè®¤è´­";
"defi.my.page.my.loan.cell.header.failed" =  "è®¤è´­æç»æ";
"defi.my.page.my.loan.cell.header.success" =  "%@å®ç½";
"defi.my.page.my.loan.cell.header.cancel" =  "å·²åæ¶";

"defi.my.page.my.loan.cell.title.saled" =  "å·²è®¤è´­";
"defi.my.page.my.loan.cell.title.expire.time" =  "å°ææ¶é´";
"defi.my.page.my.loan.cell.title.rate" =  "æ¥å©ç: %@";
"defi.my.page.my.loan.cell.title.duration" =  "åå¸æé: %@å¤©";
"defi.my.page.my.loan.cell.title.used" =  "å·²ä½¿ç¨: ";
"defi.my.page.my.loan.cell.title.remain" =  "å©ä½éé¢: ";

"defi.my.page.my.loan.cell.button.view.refund" =  "æ¥çä½é¢";
"defi.my.page.my.loan.cell.button.cancel" =  "æ¤éåå¸";
"defi.my.page.my.loan.cell.button.use" =  "å»ä½¿ç¨";

"defi.my.page.my.loan.cell.button.cancel.alert.title" = "æ¤éåå¸";
"defi.my.page.my.loan.cell.button.cancel.alert.message" = "æ­£å¨ç«ç­è®¤è´­ä¸­ï¼ç¡®å®æ¤éåå¸åï¼";
"defi.my.page.my.loan.cell.button.cancel.alert.ok" = "ç¡®å®";
"defi.my.page.my.loan.cell.button.cancel.alert.cancel" = "æä¸æ¤é";
"defi.my.page.my.loan.cell.button.cancel.success.toast" =  "æ¤éåå¸æå";

// My DeFi Subscription
"defi.my.page.my.subscription.cell.id.title" =  "Hash: ";
"defi.my.page.my.subscription.cell.header.end.time" =  "%@åç»æè®¤è´­";
"defi.my.page.my.subscription.cell.header.failed" =  "è®¤è´­æç»æ";
"defi.my.page.my.subscription.cell.header.success" =  "%@å®ç½";

"defi.my.page.my.subscription.cell.title.subscription.amount" =  "è®¤è´­éé¢";
"defi.my.page.my.subscription.cell.title.duration" =  "åå¸æé: %@å¤©";
"defi.my.page.my.subscription.cell.title.year.rate" =  "å¹´åæ¶çç: %@";
"defi.my.page.my.subscription.cell.title.total.earnings" =  "é¢è®¡æ»æ¶ç";
"defi.my.page.my.subscription.cell.title.saled" =  "å·²è®¤è´­";
"defi.my.page.my.subscription.cell.title.remain.amount" =  "å©ä½é¢åº¦";

"defi.my.page.my.subscription.cell.button.view.earnings" =  "æ¥çæ¶ç";
"defi.my.page.my.subscription.cell.button.subscription" =  "ç»§ç»­è®¤è´­";
"defi.my.page.my.subscription.cell.button.view.refund" =  "æ¥çéæ¬¾";

// DeFi Loan
"defi.loan.page.title" =  "åå¸åå¸";
"defi.loan.page.slogan" =  "å»ä¸­å¿åæºè½åçº¦å®å¨ä¿é";

"defi.loan.page.cell.each.amount.placeholder" =  "æå°%@ %@";
"defi.loan.page.cell.number.title" =  "åå¸ä»½æ°";
"defi.loan.page.cell.number.placeholder" =  "è¯·å¡«ååå¸æ»ä»½æ°";
"defi.loan.page.cell.number.unit" =  "ä»½";
"defi.loan.page.cell.total.amount.title" =  "åå¸æ»é¢";
"defi.loan.page.cell.total.amount.tip" =  "åå¸æ»é¢=æ¯ä»½éé¢*ä»½æ°";
"defi.loan.page.cell.rate.title" =  "æ¥å©ç";
"defi.loan.page.cell.duration.title" =  "åå¸æé";
"defi.loan.page.cell.duration.approximate" =  "çº¦";
"defi.loan.page.cell.duration.day" =  "å¤©";
"defi.loan.page.cell.duration.block" =  "%@ä¸ªå¿«ç§å";
"defi.loan.page.cell.duration.tip" =  "åå¸æååéæå¨æä½ä½¿ç¨åæ¬¾ï¼è¯·é¢çæä½æ¶é´ãä½¿ç¨DeFièµäº§æ¶ï¼æ³¨åSBPéè¦å©ä½å¯ç¨æ¶é´å¤§äº90å¤©ï¼æµæ¼æç¿éè¦å©ä½å¯ç¨æ¶é´å¤§äº11å¤©ï¼å¼éäº¤ææSVIPéè¦å©ä½å¯ç¨æ¶é´å¤§äº90å¤©ï¼è·åéé¢éè¦å©ä½å¯ç¨æ¶é´å¤§äº3å¤©ãéèèèç¹ä¸¢åé æçæ¶é´åå¿«ç§åä¹é´çè¯¯å·®ã";
"defi.loan.page.cell.subscription.time.title" =  "è®¤è´­æ";
"defi.loan.page.cell.subscription.time.unit" =  "å¤©";
"defi.loan.page.cell.interest.title" =  "åºå»ç»å©æ¯";
"defi.loan.page.loan.button.title" =  "å»ç»å©æ¯åå¸åå¸";
"defi.loan.page.loan.success.toast" =  "åå¸åå¸æå";

"defi.loan.page.tip1" =  "åå¸æéä»¥å¿«ç§åä¸ºåã";
"defi.loan.page.tip2" =  "è®¤è´­æåï¼è¥æåå®ç½ï¼èªå¨ç»æè®¤è´­ï¼å¼å§è®¡æ¯ã";
"defi.loan.page.tip3" =  "å°æ è®¤è´­æ¶ï¼æ¨å¯ä»¥æ¤éåå¸ã";
"defi.loan.page.tip4" =  "è®¤è´­æç»æåï¼è¥æªæåå®ç½ï¼å¯éæ°åå¸åå¸ã";

"defi.loan.page.cell.each.amount.error.empty" =  "è¯·è¾å¥æ¯ä»½éé¢";
"defi.loan.page.cell.each.amount.error.too.small" =  "æå° 10 Vite";
"defi.loan.page.cell.each.amount.error.not.enough" =  "åºç¡ä½é¢ä¸è¶³ï¼æ æ³æ¯ä»å©æ¯";

"defi.loan.page.cell.number.error.empty" =  "è¯·è¾å¥åå¸æ»ä»½æ°";
"defi.loan.page.cell.number.error.too.small" =  "åå¸æ»ä»½æ°ä¸è½ä¸º0";

"defi.loan.page.cell.rate.error.empty" =  "è¯·è¾å¥æ¥å©ç";
"defi.loan.page.cell.rate.error.too.small" =  "æ¥å©çå¿é¡»å¤§äº0%";
"defi.loan.page.cell.rate.error.too.big" =  "æ¥å©çå¿é¡»å°äºæç­äº100%";

"defi.loan.page.cell.duration.error.empty" =  "è¯·è¾å¥åå¸æé";
"defi.loan.page.cell.duration.error.too.small" =  "åå¸æéå¿é¡»å¤§äº0";

"defi.loan.page.cell.subscription.time.error.empty" =  "è¯·è¾å¥è®¤è´­æ";
"defi.loan.page.cell.subscription.time.error.illegal" =  "è®¤è´­æåªè½æ¯1-7å¤©";

// DeFi Subscription
"defi.subscription.page.title" =  "æè¦è®¤è´­";
"defi.subscription.page.duration.title" =  "åå¸æé";
"defi.subscription.page.duration.pre" =  "çº¦";
"defi.subscription.page.duration.suf" =  "å¤©";
"defi.subscription.page.duration.unit" =  "%@ %@ %@";
"defi.subscription.page.duration.block" =  "%@ä¸ªå¿«ç§å";
"defi.subscription.page.left.copys.title" =  "å©ä½ä»½æ°";
"defi.subscription.page.left.copys.unit" =  "ä»½";
"defi.subscription.page.subscription.copys.title" =  "è®¤è´­ä»½æ°";
"defi.subscription.page.subscription.copys.unit" =  "ä»½";
"defi.subscription.page.subscription.amount.title" =  "è®¤è´­éé¢";
"defi.subscription.page.earnings.title" =  "é¢è®¡æ»æ¶ç/æ¯æ¥æ¶ç";
"defi.subscription.page.subscription.button.title" =  "ç«å³è®¤è´­";
"defi.subscription.page.tip1" =  "åç¡®çåå¸æéä»¥å¿«ç§åé«åº¦ä¸ºåã";
"defi.subscription.page.tip2" =  "è®¤è´­æç»æåï¼è¥æªæåå®ç½ï¼ä¼èªå¨è¿è¿è®¤è´­éé¢ã";
"defi.subscription.page.tip3" =  "è®¤è´­æåï¼è¥æåå®ç½ï¼èªå¨ç»æè®¤è´­ï¼å¼å§è®¡æ¯ã";
"defi.subscription.page.tip4" =  "æ¶çææ¥åæ¾è³DeFiåºç¡ä½é¢ã";

"defi.subscription.page.cell.copys.error.empty" =  "è¯·è¾å¥è®¤è´­ä»½æ°";
"defi.subscription.page.cell.copys.error.too.small" =  "è®¤è´­ä¸è½ä¸º0";
"defi.subscription.page.cell.copys.error.too.big" =  "è®¤è´­ä»½æ°ä¸è¶³";
"defi.subscription.page.cell.amount.error.not.enough" =  "åºç¡ä½é¢ä¸è¶³";
"defi.subscription.page.subscription.success.toast" =  "è®¤è´­æå";

// DeFi Loan Detail
"defi.loan.detail.page.title" =  "åå¸è¯¦æ";

"defi.loan.detail.page.failed.button.reloan.title" =  "éæ°åå¸åå¸";
"defi.loan.detail.page.failed.button.refunding.title" =  "éæ¬¾ä¸­";
"defi.loan.detail.page.failed.button.view.refund.title" =  "æ¥çéæ¬¾";
"defi.loan.detail.page.failed.tip1" =  "åå¸æéä»¥å¿«ç§åé«åº¦ä¸ºåã";

"defi.loan.detail.page.on.sale.button.cancel.title" =  "æ¤éåå¸";
"defi.loan.detail.page.on.sale.button.cancel.alert.title" =  "æ¤éåå¸";
"defi.loan.detail.page.on.sale.button.cancel.alert.message" =  "æ­£å¨ç«ç­è®¤è´­ä¸­ï¼ç¡®å®æ¤éåå¸åï¼";
"defi.loan.detail.page.on.sale.button.cancel.alert.ok" =  "ç¡®å®";
"defi.loan.detail.page.on.sale.button.cancel.alert.cancel" =  "æä¸åæ¶";
"defi.loan.detail.page.on.sale.tip1" =  "åå¸æéä»¥å¿«ç§åé«åº¦ä¸ºåã";
"defi.loan.detail.page.on.sale.tip2" =  "è®¤è´­æåï¼è¥æåå®ç½ï¼èªå¨ç»æè®¤è´­ï¼å¼å§è®¡æ¯ã";
"defi.loan.detail.page.on.sale.tip3" =  "å°æ è®¤è´­æ¶ï¼æ¨å¯ä»¥æ¤éåå¸ã";
"defi.loan.detail.page.on.sale.tip4" =  "è®¤è´­æç»æåï¼è¥æªæåå®ç½ï¼å¯éæ°åå¸åå¸ã";

"defi.loan.detail.page.success.button.use.title" =  "å»ä½¿ç¨";
"defi.loan.detail.page.success.button.view.use.title" =  "æ¥çä½¿ç¨è®°å½";
"defi.loan.detail.page.success.tip1" =  "åå¸æéä»¥å¿«ç§åé«åº¦ä¸ºåã";

// DeFi item
"defi.item.id.title" =  "äº§åHash";
"defi.item.loan.duration.title" =  "åå¸æé";
"defi.item.subscription.duration.title" =  "è®¤è´­æé";
"defi.item.duration.pre" =  "çº¦";
"defi.item.duration.suf" =  "å¤©";
"defi.item.subscription.duration.format" =  "%@ %@";
"defi.item.loan.duration.format" =  "%@ %@ %@";
"defi.item.loan.duration.block" =  "%@ä¸ªå¿«ç§å";
"defi.item.year.rate.title" =  "å¹´åæ¶çç";
"defi.item.day.rate.title" =  "æ¥å©ç";
"defi.item.loan.amount.title" =  "åå¸éé¢";
"defi.item.loan.copys.title" =  "åå¸ä»½æ°";
"defi.item.each.amount.title" =  "æ¯ä»½éé¢";
"defi.item.left.copys.title" =  "å©ä½ä»½æ°";
"defi.item.subscription.copys.title" =  "è®¤è´­ä»½æ°";
"defi.item.copys.unit" =  "ä»½";
"defi.item.subscription.amount.title" =  "è®¤è´­éé¢";

"defi.item.paid.interest.title" =  "å·²å»ç»å©æ¯";
"defi.item.paid.interest.invaild.title" =  "(å·²è§£å»)";
"defi.item.subscribe.amount.title" =  "å·²è®¤è´­éé¢";
"defi.item.used.amount.title" =  "å·²ä½¿ç¨éé¢";
"defi.item.can.use.amount.title" =  "å¯ç¨åå¸ä½é¢";
"defi.item.end.snapshoot.height.title" =  "å°æå¿«ç§åé«åº¦";
"defi.item.end.time.title" =  "é¢è®¡å°ææ¶é´";
"defi.item.refund.paid.interest.title" =  "åºéå·²æ¯ä»å©æ¯";
"defi.item.publish.time.title" =  "åå¸æ¶é´";
"defi.item.success.time.title" =  "å®ç½æ¶é´";

"defi.item.status.on.sale" =  "è®¤è´­ä¸­";
"defi.item.status.failed" =  "å°ææªå®ç½";
"defi.item.status.success" =  "æåå®ç½";
"defi.item.status.cancel" =  "å·²åæ¶";

"defi.card.slogan" =  "å»ä¸­å¿åæºè½åçº¦å®å¨ä¿é";
"defi.card.progress" =  "è®¤è´­è¿åº¦: ";
"defi.card.end.time" =  "%@å¤©%@åç»æè®¤è´­";

"defi.bill.billTypeTitle.all" = "å¨é¨";
"defi.bill.billTypeTitle.paiedInterest" = "è®¤è´­æåå©æ¯æ£æ¬¾";
"defi.bill.billTypeTitle.refundOfinterestPaid" = "å·²ä»å©æ¯éæ¬¾";
"defi.bill.billTypeTitle.subscriptionAmount" = "è®¤è´­éé¢";
"defi.bill.billTypeTitle.subscriptionAmountDue" = "è®¤è´­å°æéæ¬¾";
"defi.bill.billTypeTitle.subscriptionRevenuee" = "è®¤è´­æ¶ç";
"defi.bill.billTypeTitle.Refundofsubscriptionamount" = "è®¤è´­å¤±è´¥éæ¬¾";
"defi.bill.billTypeTitle.RegisteredSBP" = "æ³¨åSBP";
"defi.bill.billTypeTitle.RegisterforSBPrefund" = "æ³¨åSBPéæ¬¾";
"defi.bill.billTypeTitle.OpenSVIPexchange" = "å¼éäº¤ææSVIP";
"defi.bill.billTypeTitle.OpenexchangeSVIPrefund" = "å¼éäº¤ææSVIPéæ¬¾";
"defi.bill.billTypeTitle.getquota" = "è·åéé¢";
"defi.bill.billTypeTitle.quotarefund" = "è·åéé¢éæ¬¾";
"defi.bill.billTypeTitle.minning" = "æµæ¼æç¿";
"defi.bill.billTypeTitle.minningrefund" = "æµæ¼æç¿éæ¬¾";
"defi.bill.billTypeTitle.Transferincome" = "åè½¬æ¶å¥";
"defi.bill.billTypeTitle.Transferspending" = "åè½¬æ¯åº";
"defi.bill.billTypeTitle.Successborrowmoney" = "æååå¸";
"defi.bill.billTypeTitle.loanisdueforrepayment" = "åå¸å°æè¿æ¬¾";
"defi.bill.billTypeTitle.Subscribefreeze" = "è®¤è´­å»ç»";
"defi.bill.billTypeTitle.Interestonloansisfrozen" = "åå¸å©æ¯å»ç»";
"defi.bill.billTypeTitle.thefailedloanisthawedout" = "åå¸å¤±è´¥å©æ¯è§£å»";

"defi.bill.page.title" = "DeFiè´¦å";
"defi.bill.page.Basedbalance" = "åºç¡ä½é¢";
"defi.bill.page.UsedBasedbalance" = "å·²ä½¿ç¨åºç¡ä½é¢";
"defi.bill.page.totalamountofborrowedmoney" = "åå¸æ»é¢";
"defi.bill.page.Borrowmoneybalances" = "åå¸ä½é¢";

"defi.subscription.detail.title" = "è®¤è´­è¯¦æ";

"defi.subscription.detail.title" = "è®¤è´­è¯¦æ";

"defi.manage.BasedBalanceTitle" = "DeFiåºç¡è´¦æ·";

"defi.product.detail.title" = "äº§åè¯¦æ";
"defi.product.detail.buy" = "ç«å³æ¢è´­";
"defi.product.detail.desc0" = "åç¡®çåå¸æéä»¥å¿«ç§åä¸ºåã";
"defi.product.detail.desc1" = "è®¤è´­æåï¼è¥æåå®ç½ï¼èªå¨ç»æè®¤è´­ï¼å¼å§è®¡æ¯ã";
"defi.product.detail.title.count" = "æ»ä»½æ°";
"defi.product.detail.title.borrowdeadline" = "åå¸æé";
"defi.product.detail.title.beginTime" = "è®¤è´­å¼å§æ¶é´";
"defi.product.detail.title.buydeadline" = "è®¤è´­æé";
"defi.product.detail.until.day" = "å¤©";
"defi.product.detail.until.pear" = "ä»½";


"defi.use.page.title" = "åå¸ä½¿ç¨è®°å½";
"defi.use.page.used.basefund.title" = "å·²ä½¿ç¨åºç¡ä½é¢ï¼";
"defi.use.page.used.borrowed.fund.title" = "å·²ä½¿ç¨åå¸ä½é¢ï¼";
"defi.use.page.deadline.block.height.title" = "å°æå¿«ç§é«åº¦ï¼";
"defi.use.page.useType.title.sbp" = "æ³¨åSBP";
"defi.use.page.gussesed.deadline.time" = "é¢è®¡å°ææ¶é´";
"defi.use.page.qouto.fund" = "æµæ¼ä½é¢";
"defi.use.page.deit" = "ç¼è¾";
"defi.use.page.Revocation.SBP" = "æ¤éSBP";
"defi.use.page.SBP.reward" = "è¯·å°ç½é¡µç«¯æåSBPå¥å±";
"defi.use.page.view.minning.reward" = "æ¥çæ¶ç";
"defi.use.page.view.stop.minning" = "åæ­¢æç¿";
"defi.use.page.cancle.qouto" = "ååæµæ¼";
"defi.use.page.get.qouto" = "è·åéé¢";
"defi.use.page.open.svip" = "å¼éäº¤ææSVIP";
"defi.use.page.close.svip" = "æ¤éäº¤ææSVIP";
"defi.use.page.regist.sbp" = "æ³¨åSBP";

"defi.use.page.edit.sbp.title" = "ç¼è¾SBPä¿¡æ¯";
"defi.use.page.edit.sbp.blockProducingAddressTitle" = "åºåå°å:";
"defi.use.page.edit.sbp.rewardWithdrawAddressTitle" = "æåå¥å±å°å:";
"defi.use.page.edit.sbp.confirm" = "ç¡®è®¤ä¿®æ¹";
"defi.use.page.edit.sbp.cancle" = "æä¸ä¿®æ¹";
"defi.use.page.edit.sbp.cancle.title" = "æ¤éæ³¨åSBP";
"defi.use.page.edit.can.cancle.Amount" = "å¯ååæµæ¼éé¢:";
"defi.use.page.edit.sbp.cancle.desc" = "æ¤éåï¼æµæ¼éé¢å°éååè·¯ï¼è¥æ³æä¸ºSBPï¼æ¨ééæ°æäº¤æ³¨åç³è¯·ã";
"defi.use.page.edit.cancle.cancle" = "æä¸æ¤é";
"defi.use.page.edit.cancle.confirm" = "ç¡®è®¤æ¤é";

"defi.use.page.edit.svip.cancle.title" = "æ¤éäº¤ææSVIP";
"defi.use.page.edit.svip.cancle.desc" = "æ¤éåï¼å°æ æ³äº«åäº¤ææSVIPç¹æï¼æµæ¼éé¢å°éååè·¯ã";

"defi.use.page.edit.quotal.cancle.title" = "ååè·åéé¢æµæ¼";
"defi.use.page.edit.quotal.cancle.desc" = "ååæµæ¼ä¼å½±åäº¤æéåº¦ï¼æµæ¼éé¢å°éååè·¯ãç¡®è®¤æ¤éæµæ¼åï¼";

"defi.use.page.edit.minning.cancle.title" = "åæ­¢æç¿";
"defi.use.page.edit.minning.cancle.desc" = "åæ­¢æç¿åï¼éçº¦7å¤©éåæµæ¼éé¢ãåæ­¢æç¿å°ä¸ä¼ååå¾VXæ¶çï¼ç¡®å®è¦åæ­¢æç¿åï¼";
"defi.use.page.edit.minning.cancle.cancle" = "æä¸åæ­¢";
"defi.use.page.edit.minningcancle.confirm" = "ç¡®è®¤";

"defi.SubscriptionDetail.SubscriptionAmount" = "è®¤è´­éé¢";
"defi.SubscriptionDetail.TotalAmount" = "åå¸æ»éé¢";
"defi.SubscriptionDetail.EstimatedTotalRevenuet" = "é¢è®¡æ»æ¶ç/æ¯æ¥æ¶ç";
"defi.SubscriptionDetail.Rate" = "å¹´åå©ç";
"defi.SubscriptionDetail.Paied" = "å·²åæ¾æ¶ç";
"defi.SubscriptionDetail.AmountShallRefunded" = "åºéè®¤è´­éé¢";
"defi.SubscriptionDetail.RemainingUnsold" = "å©ä½æªå®åº";
"defi.SubscriptionDetail.Refunding" = "éæ¬¾ä¸­";
"defi.SubscriptionDetail.remaining.copies" = "å©ä½ä»½æ°";
"defi.SubscriptionDetail.buy" = "ç»§ç»­è®¤è´­";
"defi.SubscriptionDetail.onSaleTip1" = "åå¸æéä»¥å¿«ç§åé«åº¦ä¸ºå.";
"defi.SubscriptionDetail.onSaleTip2" = "è®¤è´­æç»æåï¼è¥æªæåå®ç½ï¼ä¼èªå¨è¿è¿è®¤è´­éé¢ã";
"defi.SubscriptionDetail.onSaleTip3" = "è®¤è´­æåï¼è¥æåå®ç½ï¼èªå¨ç»æè®¤è´­ï¼å¼å§è®¡æ¯ã";
"defi.SubscriptionDetail.onSaleTip4" = "æ¶çææ¥åæ¾è³DeFiåºç¡ä½é¢ã";
"defi.SubscriptionDetail.success.height" = "å®ç½å¿«ç§åé«åº¦";
"defi.SubscriptionDetail.success.time" = "å®ç½æ¶é´";
"defi.SubscriptionDetail.end.time" = "å°æå¿«ç§åé«åº¦";
"defi.SubscriptionDetail.Estimated.end.time" = "é¢è®¡å°ææ¶é´";
"defi.SubscriptionDetail.Check.the.yield" = "æ¥çæ¶ç";
"defi.SubscriptionDetail.successTip1" = "åå¸æéåå°ææ¶é´ä»¥å¿«ç§åé«åº¦ä¸ºå.";
"defi.SubscriptionDetail.successTip2" = "æ¶çææ¥åæ¾è³DeFiåºç¡ä½é¢ã";
"defi.frozened.amount.title" = "å·²å»ç»åºç¡ä½é¢";
"defi.detail.Numberofremainingavailableforsubscription" = "å©ä½å¯è®¤è´­ä»½æ°";

"grin.initing.desc" = "Initializing, click to view details";
"grin.initing.detail" = "1ãInitialization is required upon adding GRIN wallet\n2ãThe process is expected to last 15 minutes\n3ãDo not interrupt or kill the APP during initialization\n4ãInitialization will consume a large amount of cellular data, it is recommended to continue the process on Wi-Fi.";
